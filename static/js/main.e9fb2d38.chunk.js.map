{"version":3,"sources":["Context/MainContext.js","Sections/UserSection.js","Sections/ComputerSection.js","Components/Options.js","Components/ScoreBoard.js","Components/Header.js","Sections/HistorySection.js","App.js","serviceWorker.js","index.js"],"names":["MainContext","createContext","UserSection","Context","useContext","handleClick","userOptName","compOptName","Math","floor","random","setWinnerName","setUserScore","userScore","setCompScore","compScore","setUserSelectedOption","setCompSelectedOption","useState","userImage","setUserImage","className","src","process","name","alt","onClick","e","target","width","height","xs","winnerName","ComputerSection","compImage","setCompImage","useEffect","compSelectedOption","Options","Container","style","marginTop","fluid","display","justifyContent","ScoreBoard","textAlign","dateStr","Date","toString","split","slice","join","data","id","nanoid","date","setUserScoreHistoryList","userScoreHistoryList","localStorage","setItem","JSON","stringify","toast","type","position","positionVal","err","handleSave","getItem","removeItem","handleReset","body","document","querySelector","left","overflow","handleHistory","Header","HistorySection","POSITION","BOTTOM_RIGHT","cursor","border","map","item","index","key","App","userSelectedOption","TOP_RIGHT","setPositionVal","parseInt","parse","ResizeObserver","window","innerWidth","observe","Provider","value","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e9fb2d38.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const MainContext = createContext();\r\n","import React, { useState, useContext } from \"react\";\r\n\r\n// MainContext\r\nimport { MainContext } from \"../Context/MainContext\";\r\n\r\nconst UserSection = () => {\r\n  const Context = useContext(MainContext);\r\n\r\n  // useEffect(() => {\r\n  //   if (Context.winnerName === \"User\") {\r\n  //     Context.setUserScore(Context.userScore + 1);\r\n  //   } else if (Context.winnerName === \"Computer\") {\r\n  //     Context.setCompScore(Context.compScore + 1);\r\n  //   }\r\n  // }, [result]);\r\n\r\n  const handleClick = (userOptName) => {\r\n    // console.log(\"Clicked\");\r\n    const compID = Math.floor(Math.random() * 3) + 1;\r\n    let compOptName = \"\";\r\n    switch (compID) {\r\n      case 1:\r\n        compOptName = \"ROCK\";\r\n        break;\r\n      case 2:\r\n        compOptName = \"PAPER\";\r\n        break;\r\n      case 3:\r\n        compOptName = \"SCISSOR\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    // console.log(`User - ${userOptName} and Comp - ${compOptName}`);\r\n\r\n    if (userOptName === compOptName) {\r\n      Context.setWinnerName(\"Tie\");\r\n    } else if (userOptName === \"ROCK\" && compOptName === \"SCISSOR\") {\r\n      Context.setWinnerName(\"User\");\r\n      Context.setUserScore(Context.userScore + 1);\r\n    } else if (userOptName === \"ROCK\" && compOptName === \"PAPER\") {\r\n      Context.setWinnerName(\"Computer\");\r\n      Context.setCompScore(Context.compScore + 1);\r\n    } else if (userOptName === \"PAPER\" && compOptName === \"ROCK\") {\r\n      Context.setWinnerName(\"User\");\r\n      Context.setUserScore(Context.userScore + 1);\r\n    } else if (userOptName === \"PAPER\" && compOptName === \"SCISSOR\") {\r\n      Context.setWinnerName(\"Computer\");\r\n      Context.setCompScore(Context.compScore + 1);\r\n    } else if (userOptName === \"SCISSOR\" && compOptName === \"PAPER\") {\r\n      Context.setWinnerName(\"User\");\r\n      Context.setUserScore(Context.userScore + 1);\r\n    } else if (userOptName === \"SCISSOR\" && compOptName === \"ROCK\") {\r\n      Context.setWinnerName(\"Computer\");\r\n      Context.setCompScore(Context.compScore + 1);\r\n    } else {\r\n      Context.setWinnerName(\"-\");\r\n    }\r\n\r\n    Context.setUserSelectedOption(`${userOptName}`);\r\n    Context.setCompSelectedOption(`${compOptName}`);\r\n  };\r\n\r\n  const [userImage, setUserImage] = useState(null);\r\n  return (\r\n    <div className=\"user-section-container\">\r\n      <h4>User</h4>\r\n      <div className=\"user-section\">\r\n        <div className=\"user-section-images\">\r\n          <img\r\n            src={process.env.PUBLIC_URL + \"/Images/rock.jpg\"}\r\n            name=\"ROCK\"\r\n            alt=\"rock_image\"\r\n            onClick={(e) => {\r\n              handleClick(e.target.name);\r\n              setUserImage(e.target.src);\r\n            }}\r\n            width=\"100%\"\r\n            height=\"25%\"\r\n          />\r\n          <img\r\n            src={process.env.PUBLIC_URL + \"/Images/paper.jpg\"}\r\n            name=\"PAPER\"\r\n            alt=\"paper_image\"\r\n            onClick={(e) => {\r\n              handleClick(e.target.name);\r\n              setUserImage(e.target.src);\r\n            }}\r\n            width=\"100%\"\r\n            height=\"25%\"\r\n          />\r\n          <img\r\n            src={process.env.PUBLIC_URL + \"/Images/scissor_new.jpg\"}\r\n            name=\"SCISSOR\"\r\n            alt=\"scissor_image\"\r\n            onClick={(e) => {\r\n              handleClick(e.target.name);\r\n              setUserImage(e.target.src);\r\n            }}\r\n            width=\"100%\"\r\n            height=\"25%\"\r\n          />\r\n        </div>\r\n        <div className=\"user-section-main-image\" xs=\"9\">\r\n          {Context.winnerName === \"Please select ROCK, PAPER or SCISSOR..\" ? (\r\n            <img\r\n              className=\"selected-image\"\r\n              src={process.env.PUBLIC_URL + \"/Images/blank.jpg\"}\r\n              alt=\"user_selected_image\"\r\n              width=\"90%\"\r\n              height=\"280px\"\r\n            />\r\n          ) : (\r\n            <img\r\n              className=\"selected-image\"\r\n              src={userImage}\r\n              alt=\"user_selected_image\"\r\n              width=\"90%\"\r\n              height=\"280px\"\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserSection;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\n\r\nimport { MainContext } from \"../Context/MainContext\";\r\n\r\nconst ComputerSection = () => {\r\n  const Context = useContext(MainContext);\r\n  const [compImage, setCompImage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (Context.compSelectedOption === \"ROCK\") {\r\n      setCompImage(\"ROCK\");\r\n      // console.log(\"ROCK is selected\");\r\n    } else if (Context.compSelectedOption === \"PAPER\") {\r\n      setCompImage(\"PAPER\");\r\n    } else if (Context.compSelectedOption === \"SCISSOR\") {\r\n      setCompImage(\"SCISSOR\");\r\n    }\r\n  }, [Context.compSelectedOption]);\r\n  return (\r\n    <div className=\"computer-section-container\">\r\n      <h4>Computer</h4>\r\n\r\n      <div className=\"computer-section\">\r\n        {Context.winnerName === \"Please select ROCK, PAPER or SCISSOR..\" ? (\r\n          <img\r\n            className=\"selected-image\"\r\n            src={process.env.PUBLIC_URL + \"/Images/blank.jpg\"}\r\n            alt=\"comp_selected_image\"\r\n            width=\"90%\"\r\n            height=\"280px\"\r\n          />\r\n        ) : compImage === \"ROCK\" ? (\r\n          <img\r\n            className=\"selected-image\"\r\n            src={process.env.PUBLIC_URL + \"/Images/rock.jpg\"}\r\n            alt=\"rock_image\"\r\n            width=\"90%\"\r\n            height=\"280px\"\r\n          />\r\n        ) : compImage === \"PAPER\" ? (\r\n          <img\r\n            className=\"selected-image\"\r\n            src={process.env.PUBLIC_URL + \"/Images/paper.jpg\"}\r\n            alt=\"paper_image\"\r\n            width=\"90%\"\r\n            height=\"280px\"\r\n          />\r\n        ) : compImage === \"SCISSOR\" ? (\r\n          <img\r\n            className=\"selected-image\"\r\n            src={process.env.PUBLIC_URL + \"/Images/scissor.jpg\"}\r\n            alt=\"scissors_image\"\r\n            width=\"90%\"\r\n            height=\"280px\"\r\n          />\r\n        ) : (\r\n          <img\r\n            className=\"selected-image\"\r\n            src={process.env.PUBLIC_URL + \"/Images/blank.jpg\"}\r\n            alt=\"user_selected_image\"\r\n            width=\"90%\"\r\n            height=\"280px\"\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComputerSection;\r\n","import React, { useContext } from \"react\";\r\n\r\n//Context\r\nimport { MainContext } from \"../Context/MainContext\";\r\n\r\n// reactstrap Components\r\nimport { Container } from \"reactstrap\";\r\n\r\n// Sections\r\nimport UserSection from \"../Sections/UserSection\";\r\nimport ComputerSection from \"../Sections/ComputerSection\";\r\n\r\nconst Options = () => {\r\n  const Context = useContext(MainContext);\r\n  return (\r\n    <Container\r\n      className=\"text-center \"\r\n      style={{ marginTop: `20px` }}\r\n      fluid={true}\r\n    >\r\n      <div style={{ display: `flex`, justifyContent: `space-around` }}>\r\n        <h4 className=\"options-main-text\">\r\n          {Context.winnerName !== \"Please select ROCK, PAPER or SCISSOR..\"\r\n            ? \"Round Winner - \"\r\n            : null}\r\n          {Context.winnerName}\r\n        </h4>\r\n      </div>\r\n      <div className=\"main-container\">\r\n        <UserSection />\r\n        <ComputerSection />\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Options;\r\n","import React, { useContext } from \"react\";\r\nimport { nanoid } from \"nanoid\";\r\nimport { toast } from \"react-toastify\";\r\n// Context\r\nimport { MainContext } from \"../Context/MainContext\";\r\n\r\nconst ScoreBoard = () => {\r\n  const Context = useContext(MainContext);\r\n\r\n  const handleSave = (e) => {\r\n    try {\r\n      const date = new Date();\r\n      const dateStr = date.toString().split(\" \").slice(0, 5).join(\" \");\r\n\r\n      const data = {\r\n        id: nanoid(36),\r\n        userScore: Context.userScore,\r\n        compScore: Context.compScore,\r\n        date: \"\" + dateStr,\r\n      };\r\n\r\n      Context.setUserScoreHistoryList([...Context.userScoreHistoryList, data]);\r\n      localStorage.setItem(\"UserScore\", Context.userScore);\r\n      localStorage.setItem(\"CompScore\", Context.compScore);\r\n      localStorage.setItem(\r\n        \"HistoryList\",\r\n        JSON.stringify([...Context.userScoreHistoryList, data])\r\n      );\r\n\r\n      return toast(\"Score Saved Successfully..!\", {\r\n        type: \"success\",\r\n        position: Context.positionVal,\r\n      });\r\n    } catch (err) {\r\n      return toast(\"Score Saved unsuccessfully..!\", {\r\n        type: \"err\",\r\n        position: Context.positionVal,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleReset = (e) => {\r\n    try {\r\n      if (\r\n        localStorage.getItem(\"UserScore\") &&\r\n        localStorage.getItem(\"CompScore\")\r\n      ) {\r\n        localStorage.removeItem(\"UserScore\");\r\n        localStorage.removeItem(\"CompScore\");\r\n        Context.setWinnerName(\"Please select ROCK, PAPER or SCISSOR..\");\r\n        Context.setUserScore(0);\r\n        Context.setCompScore(0);\r\n        return toast(\"Score Reset Successfully..!\", {\r\n          type: \"success\",\r\n          position: Context.positionVal,\r\n        });\r\n      } else if (Context.userScore !== 0 || Context.compScore !== 0) {\r\n        Context.setWinnerName(\"Please select ROCK, PAPER or SCISSOR..\");\r\n        Context.setUserScore(0);\r\n        Context.setCompScore(0);\r\n        return toast(\"Score Reset Successfully..!\", {\r\n          type: \"success\",\r\n          position: Context.positionVal,\r\n        });\r\n      } else {\r\n        return toast(\"No Score To Reset..!\", {\r\n          type: \"warning\",\r\n          position: Context.positionVal,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      return toast(\"Score Reset Unsuccessfully..!\", {\r\n        type: \"error\",\r\n        position: Context.positionVal,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleHistory = (e) => {\r\n    const body = document.querySelector(\"body\");\r\n    const historyContainer = document.querySelector(\".history-container\");\r\n    historyContainer.style.left = \"0%\";\r\n    body.style.overflow = \"hidden\";\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <h1 className=\"mb-4 scoreboard-header-text\">Score Board</h1>\r\n      <div className=\"scoreboard-score-container\">\r\n        <div className=\"user-score\">\r\n          <h3 className=\"mb2\">User</h3>\r\n          <h1>{Context.userScore}</h1>\r\n        </div>\r\n        <div className=\"computer-score\">\r\n          <h3>Computer</h3>\r\n          <h1>{Context.compScore}</h1>\r\n        </div>\r\n      </div>\r\n      <div className=\"scoreboard-footer\">\r\n        <button onClick={(e) => handleSave(e)}>Save</button>\r\n        <button onClick={(e) => handleReset(e)}>Reset</button>\r\n        <button onClick={(e) => handleHistory(e)}>History</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScoreBoard;\r\n","import React from \"react\";\r\nimport { Container } from \"reactstrap\";\r\n\r\nimport ScoreBoard from \"./ScoreBoard\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <Container className=\"header\" fluid={true}>\r\n      <ScoreBoard />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useContext } from \"react\";\r\nimport { MainContext } from \"../Context/MainContext\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst HistorySection = () => {\r\n  const { userScoreHistoryList, setUserScoreHistoryList } = useContext(\r\n    MainContext\r\n  );\r\n  const clearHistory = () => {\r\n    try {\r\n      if (localStorage.getItem(\"HistoryList\")) {\r\n        localStorage.removeItem(\"HistoryList\");\r\n        setUserScoreHistoryList([]);\r\n        return toast(\"History Cleared Successfully..!\", {\r\n          type: \"success\",\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n        });\r\n      } else {\r\n        return toast(\"History Not Present..!\", {\r\n          type: \"warning\",\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      return toast(\"History Cleared Unsuccessfully..!\", {\r\n        type: \"error\",\r\n        position: toast.POSITION.BOTTOM_RIGHT,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleCloseButton = () => {\r\n    const body = document.querySelector(\"body\");\r\n    const historyContainer = document.querySelector(\".history-container\");\r\n    historyContainer.style.left = \"100%\";\r\n    body.style.overflow = \"auto\";\r\n  };\r\n  return (\r\n    <div className=\"history-container\">\r\n      <i\r\n        onClick={handleCloseButton}\r\n        className=\"fas fa-times history-close-btn\"\r\n      ></i>\r\n      <div className=\"history-heading\">\r\n        <span>History</span>\r\n        <i\r\n          className=\"fas fa-trash-alt\"\r\n          onClick={clearHistory}\r\n          style={{ cursor: \"pointer\" }}\r\n        >\r\n          Clear All\r\n        </i>\r\n      </div>\r\n      <table\r\n        className=\"history-table\"\r\n        border=\"2\"\r\n        style={{ textAlign: \"center\" }}\r\n      >\r\n        <tbody>\r\n          <tr>\r\n            <th>Sr. No</th>\r\n            <th>User Score</th>\r\n            <th>Computer Score</th>\r\n            <th>Date</th>\r\n          </tr>\r\n          {userScoreHistoryList.map((item, index) => (\r\n            <tr key={item.id}>\r\n              <td>{index + 1}</td>\r\n              <td>{item.userScore}</td>\r\n              <td>{item.compScore}</td>\r\n              <td>{item.date}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HistorySection;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n//Context\r\nimport { MainContext } from \"./Context/MainContext\";\r\n\r\n// Components\r\nimport Options from \"./Components/Options\";\r\nimport Header from \"./Components/Header\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n// CSS\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./App.css\";\r\nimport HistorySection from \"./Sections/HistorySection\";\r\n\r\nfunction App() {\r\n  const [winnerName, setWinnerName] = useState(\r\n    \"Please select ROCK, PAPER or SCISSOR..\"\r\n  );\r\n  const [userSelectedOption, setUserSelectedOption] = useState(\"-\");\r\n  const [compSelectedOption, setCompSelectedOption] = useState(\"-\");\r\n  const [compScore, setCompScore] = useState(0);\r\n  const [userScore, setUserScore] = useState(0);\r\n  const [userScoreHistoryList, setUserScoreHistoryList] = useState([]);\r\n  const [positionVal, setPositionVal] = useState(toast.POSITION.TOP_RIGHT);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      localStorage.getItem(\"UserScore\") &&\r\n      localStorage.getItem(\"CompScore\")\r\n    ) {\r\n      setUserScore(parseInt(localStorage.getItem(\"UserScore\")));\r\n      setCompScore(parseInt(localStorage.getItem(\"CompScore\")));\r\n      // console.log(\"Scores are Present\");\r\n    } else {\r\n      // console.log(\"Scores are not Present\");\r\n    }\r\n\r\n    if (localStorage.getItem(\"HistoryList\")) {\r\n      setUserScoreHistoryList(JSON.parse(localStorage.getItem(\"HistoryList\")));\r\n      // console.log(\"HistoryList is Present\");\r\n    } else {\r\n      // console.log(\"HistoryList is not Present\");\r\n    }\r\n  }, []);\r\n\r\n  // resizeObserver\r\n  const resizeObserver = new ResizeObserver(() => {\r\n    if (window.innerWidth < 700) {\r\n      setPositionVal(toast.POSITION.BOTTOM_RIGHT);\r\n    } else {\r\n      setPositionVal(toast.POSITION.TOP_RIGHT);\r\n    }\r\n  });\r\n\r\n  resizeObserver.observe(document.querySelector(\"body\"));\r\n\r\n  return (\r\n    <div>\r\n      <MainContext.Provider\r\n        value={{\r\n          winnerName,\r\n          userSelectedOption,\r\n          compSelectedOption,\r\n          compScore,\r\n          userScore,\r\n          userScoreHistoryList,\r\n          positionVal,\r\n          setWinnerName,\r\n          setUserSelectedOption,\r\n          setCompSelectedOption,\r\n          setCompScore,\r\n          setUserScore,\r\n          setUserScoreHistoryList,\r\n        }}\r\n      >\r\n        <Header />\r\n        <Options />\r\n        <HistorySection />\r\n        <ToastContainer />\r\n      </MainContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}